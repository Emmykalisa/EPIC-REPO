{"version":3,"sources":["test.js"],"names":["chai","use","chaiHttp","should","id","ae0f724b","wrongId","describe","it","done","request","server","get","end","err","res","body","be","a","delete","have","status"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AACAA,cAAKC,GAAL,CAASC,iBAAT;;AACAF,cAAKG,MAAL;;AAEA,IAAIC,EAAE,GAAGC,QAAT;AACA,IAAIC,OAAO,GAAG,IAAd;AAGA;;;;AAGCC,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC7BC,EAAAA,EAAE,CAAC,mCAAD,EAAsC,UAACC,IAAD,EAAU;AAChDT,kBAAKU,OAAL,CAAaC,eAAb,EACKC,GADL,CACS,kBADT,EAEKC,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACbA,MAAAA,GAAG,CAACC,IAAJ,CAASb,MAAT,CAAgBc,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACJT,MAAAA,IAAI;AACL,KALL;AAMD,GAPC,CAAF;AAQH,CATQ,CAAR;AAWDF,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCC,EAAAA,EAAE,CAAC,mCAAD,EAAsC,UAACC,IAAD,EAAU;AAChDT,kBAAKU,OAAL,CAAaC,eAAb,EACKC,GADL,CACS,yBADT,EAEKC,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACbA,MAAAA,GAAG,CAACC,IAAJ,CAASb,MAAT,CAAgBc,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACJT,MAAAA,IAAI;AACL,KALL;AAMD,GAPC,CAAF;AAQD,CATO,CAAR;AAWAF,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACnCC,EAAAA,EAAE,CAAC,iCAAD,EAAoC,UAACC,IAAD,EAAU;AAC9CT,kBAAKU,OAAL,CAAaC,eAAb,EACKC,GADL,CACS,uBADT,EAEKC,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACbA,MAAAA,GAAG,CAACC,IAAJ,CAASb,MAAT,CAAgBc,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACJT,MAAAA,IAAI;AACL,KALL;AAMD,GAPC,CAAF;AAQD,CATO,CAAR;AAWA;;;;AAGCF,QAAQ,CAAC,qBAAD,EAAyB,YAAM;AACtCC,EAAAA,EAAE,CAAC,qDAAD,EAAwD,UAACC,IAAD,EAAU;AAClET,kBAAKU,OAAL,CAAaC,eAAb,EACGQ,MADH,CACU,sBAAoBb,OAD9B,EAEGO,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,MAAAA,GAAG,CAACZ,MAAJ,CAAWiB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAN,MAAAA,GAAG,CAACC,IAAJ,CAASb,MAAT,CAAgBc,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAT,MAAAA,IAAI;AACL,KANH;AAOD,GARC,CAAF;AASAD,EAAAA,EAAE,CAAC,uCAAD,EAA0C,UAACC,IAAD,EAAU;AACpDT,kBAAKU,OAAL,CAAaC,eAAb,EACGQ,MADH,CACU,sBAAoBf,EAD9B,EAEGS,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,MAAAA,GAAG,CAACZ,MAAJ,CAAWiB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAN,MAAAA,GAAG,CAACC,IAAJ,CAASb,MAAT,CAAgBc,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAT,MAAAA,IAAI;AACL,KANH;AAOD,GARC,CAAF;AASD,CAnBQ,CAAR","sourceRoot":"/home/giraict/Project/andela/EPICmail/server/tests","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport server from '../server';\nimport Message from '../controllers/Message';\nchai.use(chaiHttp);\nchai.should();\n\nlet id = ae0f724b;\nlet wrongId = 1991;\n\n\n/*\n  * Test the /GET route\n  */\n describe('/Get messages', () => {\n    it('it should GET all emails/messages', (done) => {\n      chai.request(server)\n          .get('/api/v1/messages')\n          .end((err, res) => {\n                res.body.should.be.a('array');\n            done();\n          });\n    });\n});\n\ndescribe('/Get Unread messages', () => {\n  it('it should GET all Unread messages', (done) => {\n    chai.request(server)\n        .get('/api/v1/messages/unread')\n        .end((err, res) => {\n              res.body.should.be.a('array');\n          done();\n        });\n  });\n});\n\ndescribe('/Get Sent messages', () => {\n  it('it should GET all Sent messages', (done) => {\n    chai.request(server)\n        .get('/api/v1/messages/sent')\n        .end((err, res) => {\n              res.body.should.be.a('array');\n          done();\n        });\n  });\n});\n\n/*\n  * Test the /DELETE/:id route\n  */\n describe('/DELETE One message',  () => {\n  it('If no office matching id. Status code should be 404', (done) => {\n    chai.request(server)\n      .delete('/api/v1/messages/'+wrongId)\n      .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        done();\n      });\n  });\n  it('If deleted. Status code should be 200', (done) => {\n    chai.request(server)\n      .delete('/api/v1/messages/'+id)\n      .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done();\n      });\n  });\n});\n"]}