{"version":3,"sources":["validator.js"],"names":["exports","allmessages","req","res","next","assert","notEmpty","errors","validationErrors","status","json","error","msg","signupvali"],"mappings":";;AAAAA,OAAO,CAACC,WAAR,GAAsB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzCF,EAAAA,GAAG,CAACG,MAAJ,CAAW,SAAX,EAAsB,wBAAtB,EAAgDC,QAAhD;AACGJ,EAAAA,GAAG,CAACG,MAAJ,CAAW,SAAX,EAAsB,wBAAtB,EAAgDC,QAAhD;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAW,iBAAX,EAA8B,gCAA9B,EAAgEC,QAAhE;AACHJ,EAAAA,GAAG,CAACG,MAAJ,CAAW,QAAX,EAAqB,oCAArB,EAA2DC,QAA3D;AAEA,MAAMC,MAAM,GAAGL,GAAG,CAACM,gBAAJ,EAAf;AACA,MAAID,MAAJ,EAAY,OAAOJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACD,IAAAA,MAAM,EAAE,GAAT;AAAcE,IAAAA,KAAK,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUK;AAA/B,GAArB,CAAP;AAEZ,SAAOR,IAAI,EAAX;AACA,CAVD;;AAYAJ,OAAO,CAACa,UAAR,GAAqB,UAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxCF,EAAAA,GAAG,CAACG,MAAJ,CAAW,OAAX,EAAoB,2BAApB,EAAiDC,QAAjD;AACGJ,EAAAA,GAAG,CAACG,MAAJ,CAAW,WAAX,EAAwB,+BAAxB,EAAyDC,QAAzD;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAW,UAAX,EAAuB,+BAAvB,EAAwDC,QAAxD;AACHJ,EAAAA,GAAG,CAACG,MAAJ,CAAW,UAAX,EAAuB,8BAAvB,EAAuDC,QAAvD;AAEA,MAAMC,MAAM,GAAGL,GAAG,CAACM,gBAAJ,EAAf;AACA,MAAID,MAAJ,EAAY,OAAOJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACD,IAAAA,MAAM,EAAE,GAAT;AAAcE,IAAAA,KAAK,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUK;AAA/B,GAArB,CAAP;AAEZ,SAAOR,IAAI,EAAX;AACA,CAVD","sourceRoot":"/home/giraict/Project/andela/EPICmail/server/middleware","sourcesContent":["exports.allmessages = (req, res, next) => {\n\treq.assert('subject', 'Please provide subject').notEmpty();\n    req.assert('message', 'Please provide message').notEmpty();\n    req.assert('parentMessageId', 'Please provide parentMessageId').notEmpty();\n\treq.assert('status', 'Please provide Status(Unread/Sent)').notEmpty();\n\n\tconst errors = req.validationErrors();\n\tif (errors) return res.status(400).json({status: 400, error: errors[0].msg});\n\n\treturn next();\n};\n\nexports.signupvali = (req, res, next) => {\n\treq.assert('email', 'Please provide your email').notEmpty();\n    req.assert('firstName', 'Please provide you First Name').notEmpty();\n    req.assert('lastName', 'Please provide your Last Name').notEmpty();\n\treq.assert('password', 'Please provide your password').notEmpty();\n\n\tconst errors = req.validationErrors();\n\tif (errors) return res.status(400).json({status: 400, error: errors[0].msg});\n\n\treturn next();\n};\n"]}