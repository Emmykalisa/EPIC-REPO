{"version":3,"sources":["test.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","server","get","end","err","res","body","be","a","mess","messages","subject","message","parentMessageId","status","save","delete","id","have","property","eql","result"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AACAA,cAAKC,GAAL,CAASC,iBAAT;;AACAF,cAAKG,MAAL;AAKA;;;;;AAGCC,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC7BC,EAAAA,EAAE,CAAC,mCAAD,EAAsC,UAACC,IAAD,EAAU;AAChDN,kBAAKO,OAAL,CAAaC,eAAb,EACKC,GADL,CACS,kBADT,EAEKC,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACbA,MAAAA,GAAG,CAACC,IAAJ,CAASV,MAAT,CAAgBW,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACJT,MAAAA,IAAI;AACL,KALL;AAMD,GAPC,CAAF;AAQH,CATQ,CAAR;AAWDF,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCC,EAAAA,EAAE,CAAC,mCAAD,EAAsC,UAACC,IAAD,EAAU;AAChDN,kBAAKO,OAAL,CAAaC,eAAb,EACKC,GADL,CACS,yBADT,EAEKC,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACbA,MAAAA,GAAG,CAACC,IAAJ,CAASV,MAAT,CAAgBW,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACJT,MAAAA,IAAI;AACL,KALL;AAMD,GAPC,CAAF;AAQD,CATO,CAAR;AAWAF,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACnCC,EAAAA,EAAE,CAAC,iCAAD,EAAoC,UAACC,IAAD,EAAU;AAC9CN,kBAAKO,OAAL,CAAaC,eAAb,EACKC,GADL,CACS,uBADT,EAEKC,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACbA,MAAAA,GAAG,CAACC,IAAJ,CAASV,MAAT,CAAgBW,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACJT,MAAAA,IAAI;AACL,KALL;AAMD,GAPC,CAAF;AAQD,CATO,CAAR;AAWA;;;;AAGCF,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACrCC,EAAAA,EAAE,CAAC,yCAAD,EAA4C,UAACC,IAAD,EAAU;AACpD,QAAIU,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAACC,MAAAA,OAAO,EAAE,0BAAV;AAAsCC,MAAAA,OAAO,EAAE,YAA/C;AAA6DC,MAAAA,eAAe,EAAE,IAA9E;AAAoFC,MAAAA,MAAM,EAAE;AAA5F,KAAb,CAAX;AACAL,IAAAA,IAAI,CAACM,IAAL,CAAU,UAACX,GAAD,EAAMK,IAAN,EAAe;AACnBhB,oBAAKO,OAAL,CAAaC,eAAb,EACCe,MADD,CACQ,eAAeC,EADvB,EAECd,GAFD,CAEK,UAACC,GAAD,EAAMC,GAAN,EAAa;AACZA,QAAAA,GAAG,CAACT,MAAJ,CAAWsB,IAAX,CAAgBJ,MAAhB,CAAuB,GAAvB;AACAT,QAAAA,GAAG,CAACC,IAAJ,CAASV,MAAT,CAAgBW,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAH,QAAAA,GAAG,CAACC,IAAJ,CAASV,MAAT,CAAgBsB,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,+BAA7C;AACAf,QAAAA,GAAG,CAACC,IAAJ,CAASe,MAAT,CAAgBzB,MAAhB,CAAuBsB,IAAvB,CAA4BC,QAA5B,CAAqC,IAArC,EAA2CC,GAA3C,CAA+C,CAA/C;AACAf,QAAAA,GAAG,CAACC,IAAJ,CAASe,MAAT,CAAgBzB,MAAhB,CAAuBsB,IAAvB,CAA4BC,QAA5B,CAAqC,GAArC,EAA0CC,GAA1C,CAA8C,CAA9C;AACJrB,QAAAA,IAAI;AACL,OATD;AAUL,KAXD;AAYH,GAdC,CAAF;AAeD,CAhBQ,CAAR","sourceRoot":"/home/giraict/Project/andela/EPICmail/server/tests","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport server from '../server';\nimport Message from '../controllers/Message';\nchai.use(chaiHttp);\nchai.should();\n\n\n\n\n/*\n  * Test the /GET route\n  */\n describe('/Get messages', () => {\n    it('it should GET all emails/messages', (done) => {\n      chai.request(server)\n          .get('/api/v1/messages')\n          .end((err, res) => {\n                res.body.should.be.a('array');\n            done();\n          });\n    });\n});\n\ndescribe('/Get Unread messages', () => {\n  it('it should GET all Unread messages', (done) => {\n    chai.request(server)\n        .get('/api/v1/messages/unread')\n        .end((err, res) => {\n              res.body.should.be.a('array');\n          done();\n        });\n  });\n});\n\ndescribe('/Get Sent messages', () => {\n  it('it should GET all Sent messages', (done) => {\n    chai.request(server)\n        .get('/api/v1/messages/sent')\n        .end((err, res) => {\n              res.body.should.be.a('array');\n          done();\n        });\n  });\n});\n\n/*\n  * Test the /DELETE/:id route\n  */\n describe('/DELETE/:id message', () => {\n  it('it should DELETE a message given the id', (done) => {\n      let mess = new messages({subject: \"The Chronicles of Narnia\", message: \"C.S. Lewis\", parentMessageId: 1948, status: \"Unread\", })\n      mess.save((err, mess) => {\n            chai.request(server)\n            .delete('/messages/' + id)\n            .end((err, res) =>{\n                  res.should.have.status(200);\n                  res.body.should.be.a('object');\n                  res.body.should.have.property('message').eql('message successfully deleted!');\n                  res.body.result.should.have.property('ok').eql(1);\n                  res.body.result.should.have.property('n').eql(1);\n              done();\n            });\n      });\n  });\n});\n"]}