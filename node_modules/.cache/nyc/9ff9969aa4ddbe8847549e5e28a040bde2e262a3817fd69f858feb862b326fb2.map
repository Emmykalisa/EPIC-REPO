{"version":3,"sources":["test.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","server","get","end","err","res","body","be","a","data","message","status","post","send","have","property","errors","subject","parentMessageId","eql","book"],"mappings":"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","sourceRoot":"/home/giraict/Project/andela/EPICmail/server/tests","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport server from '../server';\nimport Message from '../controllers/Message';\nchai.use(chaiHttp);\nchai.should();\n\n\n/*\n  * Test the /GET route\n  */\n describe('/Get messages', () => {\n    it('it should GET all emails/messages', (done) => {\n      chai.request(server)\n          .get('/api/v1/messages')\n          .end((err, res) => {\n                res.body.should.be.a('array');\n            done();\n          });\n    });\n});\n\ndescribe('/Get Unread messages', () => {\n  it('it should GET all Unread messages', (done) => {\n    chai.request(server)\n        .get('/api/v1/messages/unread')\n        .end((err, res) => {\n              res.body.should.be.a('array');\n          done();\n        });\n  });\n});\n\ndescribe('/Get Sent messages', () => {\n  it('it should GET all Sent messages', (done) => {\n    chai.request(server)\n        .get('/api/v1/messages/sent')\n        .end((err, res) => {\n              res.body.should.be.a('array');\n          done();\n        });\n  });\n});\n\n/*\n  * Test the /POST\n  */\n describe('/POST Message', () => {\n  it('it should not POST a message without fields', (done) => {\n      let data = {\n          message: \"The Lord of the Rings\",\n          status: \"J.R.R. Tolkien\"\n      }\n        chai.request(server)\n        .post('/api/vi/messages')\n        .send(data)\n        .end((err, res) => {\n              res.should.have.status(200);\n              res.body.should.be.a('array');\n              res.body.should.have.property('message');\n              res.body.errors.should.have.property('status');\n          done();\n        });\n  });\n  it('it should POST a message ', (done) => {\n      let data = {\n          subject: \"The Lord of the Rings\",\n          message: \"J.R.R. Tolkien\",\n          parentMessageId: 1954,\n          status: \"Unread\"\n      }\n        chai.request(server)\n        .post('/api/vi/messages')\n        .send(data)\n        .end((err, res) => {\n              res.should.have.status(200);\n              res.body.should.be.a('array');\n              res.body.should.have.property('message').eql('Message successfully added!');\n              res.body.book.should.have.property('subject');\n              res.body.book.should.have.property('message');\n              res.body.book.should.have.property('parentMessageId');\n              res.body.book.should.have.property('status');\n          done();\n        });\n  });\n});"]}